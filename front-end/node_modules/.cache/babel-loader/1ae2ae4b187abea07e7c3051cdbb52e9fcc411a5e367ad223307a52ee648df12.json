{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ishan\\\\AnimalWizWeb\\\\front-end\\\\src\\\\ItemGridForm.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ItemGridForm(_ref) {\n  _s();\n  let {\n    updateMatchesDB,\n    setSelectedItems,\n    initData,\n    setData,\n    sellers,\n    headerTable,\n    setHeader\n  } = _ref;\n  const [pid, setPid] = useState(1);\n  useEffect(() => {}, [pid]);\n  async function getItems(e) {\n    console.log(\"UPDATING ITEMS\");\n    e.preventDefault();\n    let init = initData;\n    sellers.forEach(async seller => {\n      let res = await axios.post(\"http://localhost:5000/items/getItems\", {\n        table: seller,\n        pid: pid\n      });\n      init[seller] = {\n        data: res.data.rows,\n        seller: seller\n      };\n      setData(init);\n    });\n    let res = await axios.post(\"http://localhost:5000/items/getItems\", {\n      table: headerTable,\n      pid: pid\n    });\n    if (res.data.rows[0] !== undefined) {\n      setHeader(res.data.rows[0]);\n      setSelectedItems(prev => {\n        prev[\"pid\"] = pid;\n        return prev;\n      });\n    } else {\n      setHeader({\n        pid: null,\n        images: [],\n        title: \"\",\n        description: \"\",\n        price: \"\"\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pidNav\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: pid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 50\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 68\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button updateMatchesButton\",\n      onClick: updateMatchesDB,\n      children: \"UPDATE MATCHES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(ItemGridForm, \"iyGIjuNFIBy93jK8W7U8sFtc/0w=\");\n_c = ItemGridForm;\nvar _c;\n$RefreshReg$(_c, \"ItemGridForm\");","map":{"version":3,"names":["axios","useEffect","useState","ItemGridForm","updateMatchesDB","setSelectedItems","initData","setData","sellers","headerTable","setHeader","pid","setPid","getItems","e","console","log","preventDefault","init","forEach","seller","res","post","table","data","rows","undefined","prev","images","title","description","price"],"sources":["C:/Ishan/AnimalWizWeb/front-end/src/ItemGridForm.js"],"sourcesContent":["import axios from 'axios'\r\nimport { useEffect, useState } from 'react'\r\n\r\nexport default function ItemGridForm({updateMatchesDB, setSelectedItems, initData, setData, sellers, headerTable, setHeader }) {\r\n\r\n  const [pid, setPid] = useState(1)\r\n\r\n  useEffect(()=>{\r\n\r\n  },[pid])\r\n\r\n  async function getItems(e) {\r\n    console.log(\"UPDATING ITEMS\")\r\n    e.preventDefault()\r\n      let init = initData\r\n      sellers.forEach(async (seller) => {\r\n        let res = await axios.post(\"http://localhost:5000/items/getItems\", { table: seller, pid: pid })\r\n        init[seller] = {data:res.data.rows, seller:seller}\r\n        setData(init)\r\n      });\r\n\r\n      let res = await axios.post(\"http://localhost:5000/items/getItems\", {table: headerTable, pid: pid})\r\n      if(res.data.rows[0] !== undefined){\r\n            setHeader(res.data.rows[0])\r\n        setSelectedItems(prev=>{\r\n          prev[\"pid\"] = pid\r\n          return prev\r\n        })\r\n      }\r\n      else{\r\n        setHeader({pid: null, images:[], title:\"\", description:\"\", price:\"\"})\r\n    }\r\n  }\r\n\r\n  return (<>\r\n        <div className='pidNav'><span>Prev</span><span>{pid}</span><span>Next</span></div>\r\n        <div className='button updateMatchesButton' onClick={updateMatchesDB}>UPDATE MATCHES</div>\r\n  </>)\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAE3C,eAAe,SAASC,YAAY,OAA2F;EAAA;EAAA,IAA1F;IAACC,eAAe;IAAEC,gBAAgB;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,OAAO;IAAEC,WAAW;IAAEC;EAAU,CAAC;EAE3H,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAEjCD,SAAS,CAAC,MAAI,CAEd,CAAC,EAAC,CAACU,GAAG,CAAC,CAAC;EAER,eAAeE,QAAQ,CAACC,CAAC,EAAE;IACzBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BF,CAAC,CAACG,cAAc,EAAE;IAChB,IAAIC,IAAI,GAAGZ,QAAQ;IACnBE,OAAO,CAACW,OAAO,CAAC,MAAOC,MAAM,IAAK;MAChC,IAAIC,GAAG,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,sCAAsC,EAAE;QAAEC,KAAK,EAAEH,MAAM;QAAET,GAAG,EAAEA;MAAI,CAAC,CAAC;MAC/FO,IAAI,CAACE,MAAM,CAAC,GAAG;QAACI,IAAI,EAACH,GAAG,CAACG,IAAI,CAACC,IAAI;QAAEL,MAAM,EAACA;MAAM,CAAC;MAClDb,OAAO,CAACW,IAAI,CAAC;IACf,CAAC,CAAC;IAEF,IAAIG,GAAG,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,sCAAsC,EAAE;MAACC,KAAK,EAAEd,WAAW;MAAEE,GAAG,EAAEA;IAAG,CAAC,CAAC;IAClG,IAAGU,GAAG,CAACG,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,KAAKC,SAAS,EAAC;MAC5BhB,SAAS,CAACW,GAAG,CAACG,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;MAC/BpB,gBAAgB,CAACsB,IAAI,IAAE;QACrBA,IAAI,CAAC,KAAK,CAAC,GAAGhB,GAAG;QACjB,OAAOgB,IAAI;MACb,CAAC,CAAC;IACJ,CAAC,MACG;MACFjB,SAAS,CAAC;QAACC,GAAG,EAAE,IAAI;QAAEiB,MAAM,EAAC,EAAE;QAAEC,KAAK,EAAC,EAAE;QAAEC,WAAW,EAAC,EAAE;QAAEC,KAAK,EAAC;MAAE,CAAC,CAAC;IACzE;EACF;EAEA,oBAAQ;IAAA,wBACF;MAAK,SAAS,EAAC,QAAQ;MAAA,wBAAC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB;QAAA,UAAOpB;MAAG;QAAA;QAAA;QAAA;MAAA,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eAClF;MAAK,SAAS,EAAC,4BAA4B;MAAC,OAAO,EAAEP,eAAgB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB;EAAA,gBAC7F;AACL;AAAC,GAnCuBD,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}