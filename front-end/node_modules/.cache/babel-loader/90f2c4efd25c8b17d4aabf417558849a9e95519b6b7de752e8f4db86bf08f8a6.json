{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ishan\\\\AnimalWizWeb\\\\front-end\\\\src\\\\ItemGridForm.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ItemGridForm(_ref) {\n  _s();\n  let {\n    updateMatchesDB,\n    setSelectedItems,\n    initData,\n    setData,\n    sellers,\n    headerTable,\n    setHeader\n  } = _ref;\n  const [pid, setPid] = useState(null);\n  const [pidList, setPidList] = useState([]);\n  useEffect(() => {\n    getItems();\n    // eslint-disable-next-line \n  }, [pid]);\n  useEffect(() => {\n    getPidList();\n  }, []);\n  async function getPidList() {\n    try {\n      let list = await axios.post(\"http://localhost:5000/items/getPidList\", {\n        table: \"a_wiz\"\n      });\n      let newList = [];\n      list.data.rows.forEach(pid => {\n        newList.push(pid.pid);\n      });\n      setPidList(newList);\n      setPid(newList[0]);\n    } catch (err) {\n      throw err;\n    }\n  }\n  async function getItems() {\n    console.log(\"UPDATING ITEMS\");\n    let init = initData;\n    sellers.forEach(async seller => {\n      let res = await axios.post(\"http://localhost:5000/items/getItems\", {\n        table: seller,\n        pid: pid\n      });\n      init[seller] = {\n        data: res.data.rows,\n        seller: seller\n      };\n      setData(init);\n    });\n    let res = await axios.post(\"http://localhost:5000/items/getItems\", {\n      table: headerTable,\n      pid: pid\n    });\n    if (res.data.rows[0] !== undefined) {\n      setHeader(res.data.rows[0]);\n      setSelectedItems(prev => {\n        prev[\"pid\"] = pid;\n        return prev;\n      });\n    } else {\n      setHeader({\n        pid: null,\n        images: [],\n        title: \"\",\n        description: \"\",\n        price: \"\"\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pidNav\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navButton button\",\n        onClick: () => {\n          setPid(pidList[pidList.indexOf(pid) - 1] ? pidList[pidList.indexOf(pid) - 1] : pidList[pidList.indexOf(pid)]);\n        },\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pidPrev\",\n        children: pid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navButton button\",\n        onClick: () => {\n          setPid(pidList[pidList.indexOf(pid) + 1] ? pidList[pidList.indexOf(pid) + 1] : pidList[pidList.indexOf(pid)]);\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button updateMatchesButton\",\n      onClick: updateMatchesDB,\n      children: \"UPDATE MATCHES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(ItemGridForm, \"SRLXwQZ7qGj7i+PoyliFBMm/9+A=\");\n_c = ItemGridForm;\nvar _c;\n$RefreshReg$(_c, \"ItemGridForm\");","map":{"version":3,"names":["axios","useEffect","useState","ItemGridForm","updateMatchesDB","setSelectedItems","initData","setData","sellers","headerTable","setHeader","pid","setPid","pidList","setPidList","getItems","getPidList","list","post","table","newList","data","rows","forEach","push","err","console","log","init","seller","res","undefined","prev","images","title","description","price","indexOf"],"sources":["C:/Ishan/AnimalWizWeb/front-end/src/ItemGridForm.js"],"sourcesContent":["import axios from 'axios'\r\nimport { useEffect, useState } from 'react'\r\n\r\nexport default function ItemGridForm({ updateMatchesDB, setSelectedItems, initData, setData, sellers, headerTable, setHeader }) {\r\n\r\n  const [pid, setPid] = useState(null)\r\n  const [pidList, setPidList] = useState([])\r\n\r\n  useEffect(() => {\r\n    getItems()\r\n    // eslint-disable-next-line \r\n  }, [pid])\r\n\r\n  useEffect(() => {\r\n    getPidList()\r\n  }, [])\r\n\r\n  async function getPidList() {\r\n    try {\r\n      let list = await axios.post(\"http://localhost:5000/items/getPidList\", { table: \"a_wiz\" })\r\n      let newList = []\r\n      list.data.rows.forEach(pid => {\r\n        newList.push(pid.pid)\r\n      })\r\n      setPidList(newList)\r\n      setPid(newList[0])\r\n    } catch (err) {\r\n      throw err\r\n    }\r\n  }\r\n\r\n  async function getItems() {\r\n    console.log(\"UPDATING ITEMS\")\r\n    let init = initData\r\n    sellers.forEach(async (seller) => {\r\n      let res = await axios.post(\"http://localhost:5000/items/getItems\", { table: seller, pid: pid })\r\n      init[seller] = { data: res.data.rows, seller: seller }\r\n      setData(init)\r\n    });\r\n\r\n    let res = await axios.post(\"http://localhost:5000/items/getItems\", { table: headerTable, pid: pid })\r\n    if (res.data.rows[0] !== undefined) {\r\n      setHeader(res.data.rows[0])\r\n      setSelectedItems(prev => {\r\n        prev[\"pid\"] = pid\r\n        return prev\r\n      })\r\n    }\r\n    else {\r\n      setHeader({ pid: null, images: [], title: \"\", description: \"\", price: \"\" })\r\n    }\r\n  }\r\n\r\n  return (<>\r\n    <div className='pidNav'>\r\n      <div className=\"navButton button\" onClick={() => { setPid(pidList[pidList.indexOf(pid) - 1] ? pidList[pidList.indexOf(pid) - 1] : pidList[pidList.indexOf(pid)]) }}>Prev</div>\r\n      <div className='pidPrev'>{pid}</div>\r\n      <div className='navButton button' onClick={() => { setPid(pidList[pidList.indexOf(pid) + 1] ? pidList[pidList.indexOf(pid) + 1] : pidList[pidList.indexOf(pid)]) }}>Next</div>\r\n    </div>\r\n    <div className='button updateMatchesButton' onClick={updateMatchesDB}>UPDATE MATCHES</div>\r\n  </>)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}