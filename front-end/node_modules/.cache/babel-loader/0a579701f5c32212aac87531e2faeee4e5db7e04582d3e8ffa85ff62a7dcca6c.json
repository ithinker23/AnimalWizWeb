{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ishan\\\\AnimalWizWeb\\\\front-end\\\\src\\\\ItemGrid.js\",\n  _s = $RefreshSig$();\nimport Item from './Item';\nimport { useState } from 'react';\nimport ItemPrev from './itemPrev';\nimport axios from 'axios';\nimport ClearSelection from './ClearSelection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ItemGrid() {\n  _s();\n  const sellers = [\"amazon\", \"chewy\"];\n  const headerTable = \"a_wiz\";\n  const matchesDB = \"aw_matches\";\n  var initData;\n  sellers.forEach(seller => {\n    initData = {\n      ...initData,\n      [seller]: {\n        data: [],\n        seller: \"\"\n      }\n    };\n  });\n  const [data, setData] = useState(initData);\n  const [headerData, setHeader] = useState({\n    pid: null,\n    images: [],\n    title: \"\",\n    description: \"\",\n    price: \"\"\n  });\n  var selectedItemsInitData = {\n    pid: headerData.pid\n  };\n  sellers.forEach(seller => {\n    selectedItemsInitData = {\n      ...selectedItemsInitData,\n      [seller]: null\n    };\n  });\n  const [selectedItems, setSelectedItems] = useState(selectedItemsInitData);\n  async function updateMatchesDB() {\n    console.log(\"UPDATING MATCHES\");\n    console.log(selectedItems);\n    let res = await axios.post('http://localhost:5000/items/updateMatches', {\n      ids: selectedItems,\n      matchesDB: matchesDB\n    });\n    setSelectedItems(selectedItemsInitData);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flexContent\",\n    children: [/*#__PURE__*/_jsxDEV(ItemPrev, {\n      item: headerData,\n      updateMatchesDB: updateMatchesDB,\n      setSelectedItems: setSelectedItems,\n      initData: initData,\n      setHeader: setHeader,\n      headerTable: headerTable,\n      data: data,\n      setData: setData,\n      sellers: sellers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemGrid\",\n      children: sellers.map(seller => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sellerCol\",\n          children: [/*#__PURE__*/_jsxDEV(ClearSelection, {\n            seller: seller,\n            setSelectedItems: setSelectedItems,\n            selectedItemsInitData: selectedItemsInitData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"itemsCol\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sellerTitle\",\n              children: [seller, \" items\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sellerItems\",\n              children: data[seller].data.map(item => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(Item, {\n                    item: item,\n                    seller: data[seller].seller,\n                    setSelectedItems: setSelectedItems,\n                    selected: selectedItems[seller] === item.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 38\n                  }, this)\n                }, void 0, false);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(ItemGrid, \"jpxZCT8LntWxfhrJd5hob0VhQmg=\");\n_c = ItemGrid;\nvar _c;\n$RefreshReg$(_c, \"ItemGrid\");","map":{"version":3,"names":["Item","useState","ItemPrev","axios","ClearSelection","ItemGrid","sellers","headerTable","matchesDB","initData","forEach","seller","data","setData","headerData","setHeader","pid","images","title","description","price","selectedItemsInitData","selectedItems","setSelectedItems","updateMatchesDB","console","log","res","post","ids","map","item","id"],"sources":["C:/Ishan/AnimalWizWeb/front-end/src/ItemGrid.js"],"sourcesContent":["import Item from './Item'\r\nimport { useState } from 'react'\r\nimport ItemPrev from './itemPrev'\r\nimport axios from 'axios'\r\nimport ClearSelection from './ClearSelection'\r\n\r\nexport default function ItemGrid() {\r\n    const sellers = [\"amazon\",\"chewy\"]\r\n    const headerTable = \"a_wiz\"\r\n    const matchesDB = \"aw_matches\"\r\n\r\n\r\n\r\n    var initData\r\n    sellers.forEach((seller) => {\r\n        initData = {...initData, [seller]:{data:[], seller:\"\"}}\r\n    })\r\n    const [data, setData] = useState(initData)\r\n    const [headerData, setHeader] = useState({pid:null, images:[], title:\"\", description:\"\", price:\"\"})\r\n\r\n    var selectedItemsInitData = {pid: headerData.pid}\r\n     sellers.forEach((seller)=>{\r\n        selectedItemsInitData = {...selectedItemsInitData, [seller]:null}\r\n     })\r\n     \r\n    const [selectedItems, setSelectedItems] = useState(selectedItemsInitData)\r\n\r\n    async function updateMatchesDB(){\r\n        console.log(\"UPDATING MATCHES\")\r\n        console.log(selectedItems)\r\n       let res = await axios.post('http://localhost:5000/items/updateMatches', {ids: selectedItems, matchesDB:matchesDB})\r\n       setSelectedItems(selectedItemsInitData)\r\n    }\r\n\r\n    return (\r\n        <div className='flexContent'>  \r\n            <ItemPrev item={headerData} updateMatchesDB={updateMatchesDB} setSelectedItems={setSelectedItems} initData={initData} setHeader={setHeader} headerTable={headerTable} data={data} setData={setData} sellers={sellers}/>\r\n            <div className='itemGrid'>\r\n                {\r\n                    sellers.map(seller => {\r\n                        return (\r\n                        <div className='sellerCol'>\r\n                            <ClearSelection seller={seller} setSelectedItems={setSelectedItems} selectedItemsInitData={selectedItemsInitData}/>\r\n                            <div className='itemsCol'>\r\n                            <div className='sellerTitle'>{seller} items</div>\r\n                            <div className='sellerItems'>     \r\n                            {\r\n                            data[seller].data.map((item) => {\r\n                                 return (<>\r\n                                     <Item item={item} seller={data[seller].seller} setSelectedItems={setSelectedItems} selected={selectedItems[seller] === item.id}/>\r\n                                 </>)\r\n                             })\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                        </div>)\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAAA;AAAA;AAE7C,eAAe,SAASC,QAAQ,GAAG;EAAA;EAC/B,MAAMC,OAAO,GAAG,CAAC,QAAQ,EAAC,OAAO,CAAC;EAClC,MAAMC,WAAW,GAAG,OAAO;EAC3B,MAAMC,SAAS,GAAG,YAAY;EAI9B,IAAIC,QAAQ;EACZH,OAAO,CAACI,OAAO,CAAEC,MAAM,IAAK;IACxBF,QAAQ,GAAG;MAAC,GAAGA,QAAQ;MAAE,CAACE,MAAM,GAAE;QAACC,IAAI,EAAC,EAAE;QAAED,MAAM,EAAC;MAAE;IAAC,CAAC;EAC3D,CAAC,CAAC;EACF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAACQ,QAAQ,CAAC;EAC1C,MAAM,CAACK,UAAU,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC;IAACe,GAAG,EAAC,IAAI;IAAEC,MAAM,EAAC,EAAE;IAAEC,KAAK,EAAC,EAAE;IAAEC,WAAW,EAAC,EAAE;IAAEC,KAAK,EAAC;EAAE,CAAC,CAAC;EAEnG,IAAIC,qBAAqB,GAAG;IAACL,GAAG,EAAEF,UAAU,CAACE;EAAG,CAAC;EAChDV,OAAO,CAACI,OAAO,CAAEC,MAAM,IAAG;IACvBU,qBAAqB,GAAG;MAAC,GAAGA,qBAAqB;MAAE,CAACV,MAAM,GAAE;IAAI,CAAC;EACpE,CAAC,CAAC;EAEH,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAACoB,qBAAqB,CAAC;EAEzE,eAAeG,eAAe,GAAE;IAC5BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BD,OAAO,CAACC,GAAG,CAACJ,aAAa,CAAC;IAC3B,IAAIK,GAAG,GAAG,MAAMxB,KAAK,CAACyB,IAAI,CAAC,2CAA2C,EAAE;MAACC,GAAG,EAAEP,aAAa;MAAEd,SAAS,EAACA;IAAS,CAAC,CAAC;IAClHe,gBAAgB,CAACF,qBAAqB,CAAC;EAC1C;EAEA,oBACI;IAAK,SAAS,EAAC,aAAa;IAAA,wBACxB,QAAC,QAAQ;MAAC,IAAI,EAAEP,UAAW;MAAC,eAAe,EAAEU,eAAgB;MAAC,gBAAgB,EAAED,gBAAiB;MAAC,QAAQ,EAAEd,QAAS;MAAC,SAAS,EAAEM,SAAU;MAAC,WAAW,EAAER,WAAY;MAAC,IAAI,EAAEK,IAAK;MAAC,OAAO,EAAEC,OAAQ;MAAC,OAAO,EAAEP;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE,eACvN;MAAK,SAAS,EAAC,UAAU;MAAA,UAEjBA,OAAO,CAACwB,GAAG,CAACnB,MAAM,IAAI;QAClB,oBACA;UAAK,SAAS,EAAC,WAAW;UAAA,wBACtB,QAAC,cAAc;YAAC,MAAM,EAAEA,MAAO;YAAC,gBAAgB,EAAEY,gBAAiB;YAAC,qBAAqB,EAAEF;UAAsB;YAAA;YAAA;YAAA;UAAA,QAAE,eACnH;YAAK,SAAS,EAAC,UAAU;YAAA,wBACzB;cAAK,SAAS,EAAC,aAAa;cAAA,WAAEV,MAAM;YAAA;cAAA;cAAA;cAAA;YAAA,QAAa,eACjD;cAAK,SAAS,EAAC,aAAa;cAAA,UAE5BC,IAAI,CAACD,MAAM,CAAC,CAACC,IAAI,CAACkB,GAAG,CAAEC,IAAI,IAAK;gBAC3B,oBAAQ;kBAAA,uBACJ,QAAC,IAAI;oBAAC,IAAI,EAAEA,IAAK;oBAAC,MAAM,EAAEnB,IAAI,CAACD,MAAM,CAAC,CAACA,MAAO;oBAAC,gBAAgB,EAAEY,gBAAiB;oBAAC,QAAQ,EAAED,aAAa,CAACX,MAAM,CAAC,KAAKoB,IAAI,CAACC;kBAAG;oBAAA;oBAAA;oBAAA;kBAAA;gBAAE,iBAClI;cACP,CAAC;YAAC;cAAA;cAAA;cAAA;YAAA,QAEG;UAAA;YAAA;YAAA;YAAA;UAAA,QACJ;QAAA;UAAA;UAAA;UAAA;QAAA,QACA;MACV,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAEJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GAvDuB3B,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}